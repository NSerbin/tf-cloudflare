# name: Checking Terraform Code

# on:
#   push:
#     branches:
#       - main
#       - test
#     tags:
#     - "*"

# permissions:
#   contents: read
#   pull-requests: write

# jobs:
#   tf_checks:
#     uses: NSerbin/gh-pipelines/.github/workflows/tf-checks.yml@main
#     with:
#       terraform_version: 1.8.3
#     secrets: inherit

name: Checking Terraform Code

on:
  push:
    branches:
      - main
      - test
    tags:
      - "*"

permissions:
  contents: read
  pull-requests: write

jobs:
  terraform_checks:
    name: Terraform Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.1.6
        with:
          fetch-depth: 0

      - name: Install gomplate
        run: |
          curl -Lo gomplate https://github.com/hairyhenderson/gomplate/releases/download/v3.11.3/gomplate_linux-amd64
          chmod +x gomplate
          sudo mv gomplate /usr/local/bin/
      - name: Export secret as env
        if: ${{ env.secret != 'null' }}
        run: echo "$secret" | jq -r 'to_entries[] | "\(.key)=\(.value)"' >> $GITHUB_ENV
        env: 
          secret: ${{ toJson(secrets) }}
      - name: Export vars as env
        if: ${{ env.var != 'null' }}
        env:
          var: ${{ toJson(vars) }}
        run: echo "$var" | jq -r 'to_entries[] | "\(.key)=\(.value)"' >> $GITHUB_ENV 
      - name: Substitute Environment Variables with gomplate
        run: |
          find . -name "*.*.tfvars" -exec sh -c 'echo "Processing file: $1"; gomplate -d env=env:// -f "$1" -o "$1.tmp" && mv "$1.tmp" "$1"' _ {} \;
      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Format
        id: fmt
        run: terraform fmt -recursive -diff -write=false
        continue-on-error: true

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        continue-on-error: true

